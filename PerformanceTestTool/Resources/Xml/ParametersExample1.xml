<?xml version="1.0" encoding="utf-8"?>
<tasks description="See description in Step 1 of the &quot;Normal&quot; Task Type.&#xD;&#xA;When finished, apply the Stylesheet &quot;Stylesheet for Parameter Example 1&quot; from the default Stylesheet Collection." connections="10" timeBetweenConnections="0" performanceCountersSamplingInterval="0" mode="Parallel" usePooling="True" minPooling="0" maxPooling="100">
	<task name="Create test database" sql="use [master]&#xD;&#xA;&#xD;&#xA;if exists (select 1 from sys.databases d where d.name = 'TemporaryTestDatabase')&#xD;&#xA;begin&#xD;&#xA;	alter database [TemporaryTestDatabase] set single_user with rollback immediate&#xD;&#xA;	drop database [TemporaryTestDatabase]&#xD;&#xA;end&#xD;&#xA;&#xD;&#xA;create database [TemporaryTestDatabase]&#xD;&#xA;" type="Setup" description="Create new test database." enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Create tables" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;create table dbo.TestDataTable&#xD;&#xA;(&#xD;&#xA;	UserId int not null,&#xD;&#xA;	SomeValue varchar(50) not null&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;create table dbo.ParameterTable&#xD;&#xA;(&#xD;&#xA;	Connection int not null,&#xD;&#xA;	UserId int not null&#xD;&#xA;)&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Insert data in TestDataTable" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @i int&#xD;&#xA;set @i = 1&#xD;&#xA;&#xD;&#xA;while @i &lt;= 10000&#xD;&#xA;begin&#xD;&#xA;	insert into dbo.TestDataTable (UserId, SomeValue)&#xD;&#xA;	values (round(rand() * 9, 0) + 1, newid())&#xD;&#xA;&#xD;&#xA;	set @i = @i + 1&#xD;&#xA;end&#xD;&#xA;" type="Setup" description="Insert random UserId between 1 and 10 into TestDataTable." enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Insert data in ParameterTable" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @i int&#xD;&#xA;set @i = 1&#xD;&#xA;&#xD;&#xA;while @i &lt;= 10000&#xD;&#xA;begin&#xD;&#xA;	insert into dbo.ParameterTable (Connection, UserId)&#xD;&#xA;	values (@i, @i)&#xD;&#xA;&#xD;&#xA;	set @i = @i + 1&#xD;&#xA;end&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Get values based on parameters" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @UserId int&#xD;&#xA;&#xD;&#xA;select @UserId = p.UserId&#xD;&#xA;from dbo.ParameterTable p with (nolock)&#xD;&#xA;where p.Connection = {connection}&#xD;&#xA;&#xD;&#xA;declare @value int&#xD;&#xA;&#xD;&#xA;select @value = count(*)&#xD;&#xA;from TestDataTable t&#xD;&#xA;where t.UserId = @UserId&#xD;&#xA;and t.SomeValue like '%e%'&#xD;&#xA;&#xD;&#xA;print 'UserId: ' + convert(varchar(10), @UserId)&#xD;&#xA;print 'Match: ' + convert(varchar(10), @value)&#xD;&#xA;" type="Normal" description="For each connection, a value from TestDataTable will be retrieved based on the UserId retrieved from a parameter lookup table.&#xD;&#xA;The retrieved value can be seen in the &quot;Message&quot; column in the &quot;Connection Results&quot; view." enabled="True" delayAfterCompletion="0" includeInResults="True" />
	<task name="Drop test database" sql="use [master]&#xD;&#xA;&#xD;&#xA;alter database [TemporaryTestDatabase] set single_user with rollback immediate&#xD;&#xA;drop database [TemporaryTestDatabase]&#xD;&#xA;" type="Teardown" description="Remove the test database." enabled="True" delayAfterCompletion="0" includeInResults="False" />
</tasks>