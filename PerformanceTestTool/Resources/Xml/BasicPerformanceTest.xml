<?xml version="1.0" encoding="utf-8"?>
<tasks description="Basic Task Collection Example.&#xD;&#xA;" connections="50" timeBetweenConnections="0" performanceCountersSamplingInterval="1000" mode="Parallel" usePooling="True" minPooling="0" maxPooling="100">
	<task name="Create test database" sql="use [master]&#xD;&#xA;&#xD;&#xA;if exists (select 1 from sys.databases d where d.name = 'TemporaryTestDatabase')&#xD;&#xA;begin&#xD;&#xA;	alter database [TemporaryTestDatabase] set single_user with rollback immediate&#xD;&#xA;	drop database [TemporaryTestDatabase]&#xD;&#xA;end&#xD;&#xA;&#xD;&#xA;create database [TemporaryTestDatabase]&#xD;&#xA;alter database [TemporaryTestDatabase] modify file (name = N'TemporaryTestDatabase', size = 50MB, filegrowth = 10%)&#xD;&#xA;alter database [TemporaryTestDatabase] modify file (name = N'TemporaryTestDatabase_log', size = 50MB, filegrowth = 10%)&#xD;&#xA;" type="Setup" description="Create new test database." enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Create tables" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;create table dbo.table1&#xD;&#xA;(&#xD;&#xA;	col1 int not null,&#xD;&#xA;	col2 int identity(1, 1) not null,&#xD;&#xA;	col3 int not null,&#xD;&#xA;	col4 char(2000) default 'test' not null&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;create table dbo.table2&#xD;&#xA;(&#xD;&#xA;	col1 int not null&#xD;&#xA;)&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Insert test data in table1" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @i int&#xD;&#xA;set @i = 1&#xD;&#xA;&#xD;&#xA;while @i &lt;= 800&#xD;&#xA;begin&#xD;&#xA;	insert into dbo.table1 (col1, col3)&#xD;&#xA;	values (@i % 8, @i)&#xD;&#xA;&#xD;&#xA;	set @i = @i + 1&#xD;&#xA;end&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Insert test data in table2" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @i int&#xD;&#xA;set @i = 0&#xD;&#xA;&#xD;&#xA;while @i &lt; 8&#xD;&#xA;begin&#xD;&#xA;	insert into dbo.table2 (col1)&#xD;&#xA;	values (@i)&#xD;&#xA;&#xD;&#xA;	set @i = @i + 1&#xD;&#xA;end&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Create indexes and update statistics" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;create unique clustered index ix_col1 on dbo.table1 (col1, col2)&#xD;&#xA;create unique clustered index ix_col1 on dbo.table2 (col1)&#xD;&#xA;&#xD;&#xA;-- Update statistics to help optimizer&#xD;&#xA;update statistics dbo.table1 with fullscan&#xD;&#xA;update statistics dbo.table2 with fullscan&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Clear cache" sql="-- Clear Buffer Pool&#xD;&#xA;checkpoint&#xD;&#xA;dbcc dropcleanbuffers with no_infomsgs&#xD;&#xA;&#xD;&#xA;-- Clear Plan Cache&#xD;&#xA;dbcc freeproccache with no_infomsgs&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Test 1 (Put in cache run 1)" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @max bigint&#xD;&#xA;declare @min bigint&#xD;&#xA;declare @sum bigint&#xD;&#xA;declare @count bigint&#xD;&#xA;declare @avg bigint&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col3), @min = min(t1.col3), @sum = sum(convert(bigint, t1.col3)), @count = count(t1.col3), @avg = avg(convert(bigint, t1.col3))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col2), @min = min(t1.col2), @sum = sum(convert(bigint, t1.col2)), @count = count(t1.col2), @avg = avg(convert(bigint, t1.col2))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col1), @min = min(t1.col1), @sum = sum(convert(bigint, t1.col1)), @count = count(t1.col1), @avg = avg(convert(bigint, t1.col1))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;" type="Setup" description="Run 2 times to make sure 'Optimize for Ad hoc Workloads' is not influencing the test run." enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Test 1 (Put in cache run 2)" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @max bigint&#xD;&#xA;declare @min bigint&#xD;&#xA;declare @sum bigint&#xD;&#xA;declare @count bigint&#xD;&#xA;declare @avg bigint&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col3), @min = min(t1.col3), @sum = sum(convert(bigint, t1.col3)), @count = count(t1.col3), @avg = avg(convert(bigint, t1.col3))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col2), @min = min(t1.col2), @sum = sum(convert(bigint, t1.col2)), @count = count(t1.col2), @avg = avg(convert(bigint, t1.col2))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col1), @min = min(t1.col1), @sum = sum(convert(bigint, t1.col1)), @count = count(t1.col1), @avg = avg(convert(bigint, t1.col1))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;" type="Setup" description="Run 2 times to make sure 'Optimize for Ad hoc Workloads' is not influencing the test run." enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Test 2 (Put in cache run 1)" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;select t1.col1 t1col1, t1.col4 t1col4, t2.col1 t2col1&#xD;&#xA;into #temp&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select t.t1col1, t.t2col1&#xD;&#xA;from #temp t&#xD;&#xA;where t.t1col4 like '%e%'&#xD;&#xA;&#xD;&#xA;drop table #temp&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Test 2 (Put in cache run 2)" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;select t1.col1 t1col1, t1.col4 t1col4, t2.col1 t2col1&#xD;&#xA;into #temp&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select t.t1col1, t.t2col1&#xD;&#xA;from #temp t&#xD;&#xA;where t.t1col4 like '%e%'&#xD;&#xA;&#xD;&#xA;drop table #temp&#xD;&#xA;" type="Setup" description="" enabled="True" delayAfterCompletion="0" includeInResults="False" />
	<task name="Test 1" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;declare @max bigint&#xD;&#xA;declare @min bigint&#xD;&#xA;declare @sum bigint&#xD;&#xA;declare @count bigint&#xD;&#xA;declare @avg bigint&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col3), @min = min(t1.col3), @sum = sum(convert(bigint, t1.col3)), @count = count(t1.col3), @avg = avg(convert(bigint, t1.col3))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col2), @min = min(t1.col2), @sum = sum(convert(bigint, t1.col2)), @count = count(t1.col2), @avg = avg(convert(bigint, t1.col2))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select @max = max(t1.col1), @min = min(t1.col1), @sum = sum(convert(bigint, t1.col1)), @count = count(t1.col1), @avg = avg(convert(bigint, t1.col1))&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;" type="Normal" description="" enabled="True" delayAfterCompletion="0" includeInResults="True" />
	<task name="Test 2" sql="use [TemporaryTestDatabase]&#xD;&#xA;&#xD;&#xA;select t1.col1 t1col1, t1.col4 t1col4, t2.col1 t2col1&#xD;&#xA;into #temp&#xD;&#xA;from dbo.table1 t1&#xD;&#xA;inner join dbo.table2 t2 on t2.col1 = t1.col1&#xD;&#xA;&#xD;&#xA;select t.t1col1, t.t2col1&#xD;&#xA;from #temp t&#xD;&#xA;where t.t1col4 like '%e%'&#xD;&#xA;&#xD;&#xA;drop table #temp&#xD;&#xA;" type="Normal" description="" enabled="True" delayAfterCompletion="0" includeInResults="True" />
	<task name="Drop test database" sql="use [master]&#xD;&#xA;&#xD;&#xA;alter database [TemporaryTestDatabase] set single_user with rollback immediate&#xD;&#xA;drop database [TemporaryTestDatabase]&#xD;&#xA;" type="Teardown" description="Remove the test database." enabled="True" delayAfterCompletion="0" includeInResults="False" />
</tasks>